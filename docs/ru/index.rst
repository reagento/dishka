.. _ru_index:

dishka
=============================================

Привлекательный DI-фреймворк с областями видимости и приятным API.

Эта библиотека предоставляет **IoC-контейнер**, который действительно полезен.
Если вы устали бесконечно передавать объекты, просто чтобы создать другие объекты, которые, в свою очередь, создают ещё больше объектов — вы не одиноки, и у нас есть решение.
Не каждый проект требует IoC-контейнера, но взгляните на то, что мы предлагаем.

В отличие от других инструментов, Dishka фокусируется **только**
на **внедрении зависимостей**, не пытаясь решать посторонние задачи.
Он обеспечивает DI без захламления кода глобальными переменными и разбросанными по всюду спецификаторами.

Ключевые возможности:
* **Области видимости (Scopes).** Любой объект может существовать в рамках всего приложения, одного запроса или даже меньшего промежутка времени. Многие фреймворки либо не поддерживают области видимости, либо предлагают только две. Здесь вы можете определить столько областей видимости (scopes), сколько вам угодно.

* **Освобождение ресурсов (Finalization).** Некоторые зависимости (например, подключения к БД) нужно не только создавать, но и аккуратно освобождать. Многие фреймворки упускают эту важную возможность.

* **Модульные провайдеры.** Вместо множества отдельных функций или одного огромного класса вы можете разбить фабрики на небольшие классы для их удобного повторного использования.

* **Чистые зависимости.** Вам не нужно добавлять специальные маркеры в код зависимостей, чтобы они стали видны библиотеке.

* **Простое API.** Для начала работы требуется всего несколько объектов.

* **Интеграции с фреймворками.** Популярные фреймворки поддерживаются из коробки. Вы можете легко расширить функционал под свои нужды.

* **Скорость.** Библиотека достаточно быстрая, чтобы производительность не была проблемой. Фактически, она обгоняет многие аналоги.

.. toctree::
   :hidden:
   :caption: Содержание:

   quickstart
   di_intro
   concepts
   provider/index
   container/index
   integrations/index
   alternatives

.. toctree::
   :hidden:
   :caption: Продвинутое использование:

   advanced/components
   advanced/context
   advanced/generics
   advanced/scopes
   advanced/testing/index
   advanced/plotter

.. toctree::
   :hidden:
   :caption: Для разработчиков:

   requirements/technical
   contributing
